{
  "name": "@vaguevoid/platform",
  "type": "module",
  "scripts": {
    "dev": "concurrently 'bun dev:web' 'bun dev:assets'",
    "dev:web": "dotnet watch run --project Web --non-interactive",
    "dev:assets": "concurrently 'bun dev:esbuild:main' 'bun dev:esbuild:serve' 'bun dev:esbuild:vendor' 'bun dev:tailwind'",
    "dev:esbuild:main": "bun run build:esbuild:main --watch",
    "dev:esbuild:serve": "bun run build:esbuild:serve --watch",
    "dev:esbuild:vendor": "bun run build:esbuild:vendor --watch",
    "dev:tailwind": "bun run build:tailwind --watch",
    "build:all": "concurrently 'bun build:dotnet' 'bun build:assets'",
    "build:dotnet": "dotnet build",
    "build:assets": "concurrently 'bun build:esbuild:main' 'bun build:esbuild:serve' 'bun build:esbuild:vendor' 'bun build:tailwind'",
    "build:esbuild:main": "bun run esbuild Web/wwwroot/main.ts --bundle --outfile=Web/wwwroot/main.js",
    "build:esbuild:serve": "bun run esbuild Web/wwwroot/serve.ts --bundle --outfile=Web/wwwroot/serve.js",
    "build:esbuild:vendor": "bun run esbuild Web/wwwroot/vendor.ts --bundle --outfile=Web/wwwroot/vendor.js",
    "build:tailwind": "bun run tailwind",
    "clean": "dotnet clean",
    "format": "dotnet format",
    "tailwind": "tailwindcss -i ./Web/wwwroot/tailwind.css -o ./Web/wwwroot/main.css",
    "test": "dotnet run --project Test -- --show-live-output on",
    "test:watch": "dotnet watch run --project Test --",
    "test:all": "bun run test",
    "test:domain": "bun run test --filter-namespace Void.Platform.Domain*",
    "test:lib": "bun run test --filter-namespace Void.Platform.Lib*",
    "test:web": "bun run test --filter-namespace Void.Platform.Web*",
    "cover": "bun run cover:cli",
    "cover:cli": "bun run cover:generate && bun run cover:report:cli",
    "cover:web": "bun run cover:generate && bun run cover:report:web",
    "cover:generate": "dotnet run --project Test -- --coverage --coverage-settings .coverage.xml --coverage-output-format xml --coverage-output ../../../../../.cover/coverage.xml",
    "cover:report": "dotnet ~/.nuget/packages/reportgenerator/5.4.5/tools/net8.0/ReportGenerator.dll",
    "cover:report:web": "bun run cover:report -reports:.cover/coverage.xml -reporttypes:Html        -targetdir:.cover && open .cover/index.htm",
    "cover:report:cli": "bun run cover:report -reports:.cover/coverage.xml -reporttypes:TextSummary -targetdir:.cover && cat .cover/Summary.txt",
    "task": "dotnet run --project Task --",
    "db": "bun task db",
    "db:reset": "bun build:all && concurrently 'bun db reset dev' 'bun db reset test'",
    "db:drop": "concurrently 'bun db drop dev' 'bun db drop test'",
    "db:create": "concurrently 'bun db create dev' 'bun db create test'",
    "db:migrate": "concurrently 'bun db migrate dev' 'bun db migrate test'",
    "ci:test": "dotnet run --no-build --project Test -- --show-live-output on --no-progress --output detailed --coverage --coverage-settings .coverage.xml --coverage-output-format xml --coverage-output ../../../../../.cover/coverage.xml",
    "ci:cover":  "bun run cover:report -reports:.cover/coverage.xml -reporttypes:Cobertura -targetdir:.cover",
    "docker:build": "docker build -t vaguevoid/platform:latest -f Ops/Dockerfile .",
    "docker:shell": "docker run -it --rm --entrypoint=bash vaguevoid/platform:latest",
    "docker:web": "docker run -it --rm --network=host --env-file .env -e 'HOST=0.0.0.0' -e 'URL_HOST=localhost' vaguevoid/platform:latest"
  },
  "devDependencies": {
    "@alpinejs/focus": "^3.14.8",
    "@vaguevoid/design-system": "^0.0.79",
    "alpinejs": "^3.14.8",
    "concurrently": "^9.1.0",
    "esbuild": "^0.24.2",
    "htmx.org": "^1.9.12",
    "tailwindcss": "^3.4.15"
  }
}
